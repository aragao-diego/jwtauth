(function(){
'use strict'
function createSubModules(element,index,array){var subModuleName=moduleName+"."+element;angular.module(subModuleName,[]),array[index]=subModuleName}function configJwtAuth($ocLazyLoadProvider){$ocLazyLoadProvider.config({modules:[{name:"da-jwtauth",serie:!0,files:[]}]})}var moduleName="da-jwtauth",subModules=["controllers","directives","services","views"];subModules.forEach(createSubModules),angular.module(moduleName,[].concat(subModules)),configJwtAuth.$inject=["$ocLazyLoadProvider"],angular.module("da-jwtauth").config(configJwtAuth),function(){function JwtHttpInterceptor($q,JwtService){function requestInterceptor(config){return notSendAuth(config)||notSendAuth(config.headers)||!JwtService.isValidToken()?config:(config.headers[JwtService.authHeader]=JwtService.getTokenHeader(),config)}function requestErrorInterceptor(rejection){return rejection}function responseInterceptor(response){return response}function reponseErrorInterceptor(rejection){return $q.reject(rejection)}function notSendAuth(data){var skipProperty=JwtService.skipAuthorization;return!(!data||!data.hasOwnProperty(skipProperty)||data[skipProperty]!==!0)}var interceptor={request:requestInterceptor,requestError:requestErrorInterceptor,response:responseInterceptor,responseError:reponseErrorInterceptor};return interceptor}JwtHttpInterceptor.$inject=["$q","JwtService"],angular.module("da-jwtauth.services").factory("JwtHttpInterceptor",JwtHttpInterceptor)}(),function(){function JwtService($localStorage,$sessionStorage){function encodePassword(user,password){return""}function getToken(){return service.storage.token}function saveToken(token){service.storage.token=token}function deleteToken(){service.storage.token=""}function getSkipAuthorizationHeaderConfig(){var property={};return property[service.skipAuthorization]=!0,property}function getTokenHeader(){return service.authHeaderPrefix+service.getToken()+service.authHeaderSulfix}function isValidToken(){return service.storage&&service.storage.token&&""!==service.storage.token}function setStorage($storage){service.storage=$storage}var service=this;service.authHeader="Authorization",service.authHeaderPrefix="Token ",service.authHeaderSulfix="",service.skipAuthorization="skipAuthorization",service.storage=$localStorage,service.getSkipAuthorizationHeaderConfig=getSkipAuthorizationHeaderConfig,service.getTokenHeader=getTokenHeader,service.getToken=getToken,service.saveToken=saveToken,service.deleteToken=deleteToken,service.encodePassword=encodePassword,service.getTokenHeader=getTokenHeader,service.isValidToken=isValidToken,service.setStorage=setStorage}JwtService.$inject=["$localStorage","$sessionStorage"],angular.module("da-jwtauth.services").service("JwtService",JwtService)}();
})();