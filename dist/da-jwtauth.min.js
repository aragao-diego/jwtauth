(function(){
'use strict'
function createSubModules(element,index,array){var subModuleName=moduleName+"."+element;angular.module(subModuleName,[]),array[index]=subModuleName}function configJwtAuth($ocLazyLoadProvider){$ocLazyLoadProvider.config({modules:[{name:"da-jwtauth",serie:!0,files:[]}]})}var moduleName="da-jwtauth",subModules=["controllers","directives","services","views"];subModules.forEach(createSubModules),angular.module(moduleName,[].concat(subModules)),configJwtAuth.$inject=["$ocLazyLoadProvider"],angular.module("da-jwtauth").config(configJwtAuth),function(){function JwtHttpInterceptor($q){function requestInterceptor(config){if(notSendAuth(config))return config;var headerName=JwtService.authHeader,prefix=JwtService.authHeaderPrefix,sulfix=JwtService.authHeaderSulfix,token=JwtService.getToken();return config.headers[headerName]=prefix+token+sulfix,config}function requestErrorInterceptor(rejection){return rejection}function responseInterceptor(response){return response}function reponseErrorInterceptor(rejection){return rejection}function notSendAuth(data){var skipProperty=JwtService.skipAuthorization;return data&&data.hasOwnProperty(skipProperty)&&data[skipProperty]===!0?!0:!1}var interceptor={request:requestInterceptor,requestError:requestErrorInterceptor,response:responseInterceptor,responseError:reponseErrorInterceptor};return interceptor}JwtHttpInterceptor.$inject=["$q"],angular.module("da-jwtauth.services").factory("JwtHttpInterceptor",JwtHttpInterceptor)}(),function(){function JwtService(){function encodePassword(user,password){}function getToken(){return $localStorage.token}function saveToken(token){$localStorage.token=token}function deleteToken(){$localStorage.token=""}function getSkipAuthorizationHeaderConfig(){var property={};return property[service.skipAuthorization]=!0,property}var service=this;service.authHeader="Authorization",service.authHeaderPrefix="Token ",service.authHeaderSulfix="",service.skipAuthorization="skipAuthorization",service.getSkipAuthorizationHeaderConfig=getSkipAuthorizationHeaderConfig,service.encodePassword=encodePassword,service.getToken=getToken,service.saveToken=saveToken,service.deleteToken=deleteToken}angular.module("da-jwtauth.services").service("JwtService",JwtService)}();
})();